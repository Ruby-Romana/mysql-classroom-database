# Task 2 Create database by Romana Islam
CREATE DATABASE HAPPY_LEARNING;
USE HAPPY_LEARNING;
SHOW DATABASES;
# Task 3 - Create tables by Romana Islam
SHOW TABLES;
CREATE TABLE CLASS (CODE CHAR(2) PRIMARY KEY, ROOM INT NOT NULL UNIQUE, PHONE CHAR(12) NOT NULL UNIQUE, MAX_CAPACITY INT NOT NULL, LOCATION VARCHAR(100) NOT NULL);
CREATE TABLE STUDENT (STUDENT_ID INT PRIMARY KEY, FIRST_NAME VARCHAR(30) NOT NULL, LAST_NAME VARCHAR(30) NOT NULL, NICKNAME VARCHAR(30), BIRTHDAY DATE NOT NULL, STREET VARCHAR(50) NOT NULL, CITY VARCHAR(30) NOT NULL, ZIPCODE VARCHAR(10) NOT NULL, CLASS_CODE CHAR(2) NOT NULL, FOREIGN KEY(CLASS_CODE) REFERENCES CLASS(CODE));
CREATE TABLE TEACHER (TEACHER_ID INT PRIMARY KEY, FIRST_NAME VARCHAR(30) NOT NULL, LAST_NAME VARCHAR(30) NOT NULL, HOME_PHONE CHAR(12) NOT NULL, COLLEGE VARCHAR(30) NOT NULL, MAJOR VARCHAR(30) NOT NULL, BACH_DEGREE VARCHAR(30) NOT NULL, CLASS_CODE CHAR(2) NOT NULL, FOREIGN KEY(CLASS_CODE) REFERENCES CLASS(CODE));
CREATE TABLE TEACHER_EMAIL (TEACHER_EMAIL_ID INT PRIMARY KEY, WORK_EMAIL VARCHAR(30) NOT NULL UNIQUE, EMAIL VARCHAR(30) NOT NULL UNIQUE, TEACHER_ID INT NOT NULL, FOREIGN KEY(TEACHER_ID) REFERENCES TEACHER(TEACHER_ID));
CREATE TABLE PARENT (PARENT_ID INT PRIMARY KEY, FIRST_NAME VARCHAR(30) NOT NULL, LAST_NAME VARCHAR(30) NOT NULL, EMAIL VARCHAR(30) UNIQUE, RELATIONSHIP VARCHAR(11) NOT NULL);
CREATE TABLE PARENT_PHONE (PARENT_PHONE_ID INT PRIMARY KEY, HOME_PHONE CHAR(12), MOBILE_PHONE CHAR(12) NOT NULL UNIQUE, WORK_PHONE CHAR(12), PARENT_ID INT NOT NULL, FOREIGN KEY(PARENT_ID) REFERENCES PARENT(PARENT_ID));
CREATE TABLE ASSIGNMENT (PARENT_ID INT NOT NULL, STUDENT_ID INT NOT NULL, FOREIGN KEY(PARENT_ID) REFERENCES PARENT(PARENT_ID), FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT(STUDENT_ID));
CREATE TABLE LUNCH_ORDER (LUNCH_ORDER_ID INT PRIMARY KEY, NUM_ITEMS CHAR(4), PARENT_ID INT NOT NULL, FOREIGN KEY(PARENT_ID) REFERENCES PARENT(PARENT_ID));
CREATE TABLE LUNCH_ITEM (CODE INT PRIMARY KEY, NAME VARCHAR(30), CALORIES INT);
CREATE TABLE SECOND_ASSIGNMENT (LUNCH_ORDER_ID INT NOT NULL, LUNCH_CODE INT NOT NULL, FOREIGN KEY(LUNCH_ORDER_ID) REFERENCES LUNCH_ORDER(LUNCH_ORDER_ID), FOREIGN KEY(LUNCH_CODE) REFERENCES LUNCH_ITEM(CODE));
SHOW TABLES;
DESCRIBE CLASS;
DESCRIBE STUDENT;
DESCRIBE TEACHER;
DESCRIBE TEACHER_EMAIL;
DESCRIBE PARENT;
DESCRIBE PARENT_PHONE;
DESCRIBE LUNCH_ORDER;
DESCRIBE LUNCH_ITEM;
DESCRIBE SECOND_ASSIGNMENT;
# Task 4 - Add data by Romana Islam
SELECT * FROM CLASS, STUDENT, TEACHER, TEACHER_EMAIL, PARENT, PARENT_PHONE, LUNCH_ORDER, LUNCH_ITEM, SECOND_ASSIGNMENT;
INSERT INTO CLASS VALUES ('A1', 111, '703-555-6666', 30, 'left hallway by the main entrance to the building, and then right turn');
INSERT INTO CLASS VALUES ('A2', 112, '703-666-5555', 26, 'left hallway by the main entrance to the buidling');
INSERT INTO CLASS VALUES ('A3', 113, '571-252-5252', 23, 'Right hallway by the main entrance to the building');
INSERT INTO CLASS VALUES ('A4', 114, '571-525-2525', 29, 'Right hallway by the main entrance to the building and then left hallway');
INSERT INTO CLASS VALUES ('A5', 115, '604-980-5678', 24, 'Go straight by the main entrance to the building and then turn left');
INSERT INTO STUDENT VALUES (211, 'Samantha', 'Salcedo', 'Sam', '2005-06-02', 'Sesame Street', 'Alexandria', '22306', 'A1');
INSERT INTO STUDENT VALUES (212, 'Winry', 'Rockbell', NULL, '2005-07-27', 'Imperial Eagle Court', 'Woodbridge', '22309', 'A1');
INSERT INTO STUDENT VALUES (213, 'Josh', 'Bozkina', 'JB', '2004-07-04', 'Great Swan Court', 'Woodbridge', '22309', 'A2');
INSERT INTO STUDENT VALUES (214, 'Asmae', 'Alami', 'Jazzy', '2004-05-15', 'Squaredale Square', 'Alexandria', '22306', 'A2');
INSERT INTO STUDENT VALUES (215, 'Xavier', 'Horton', NULL, '2006-08-19', 'Huntington Street', 'Arlington', '22305', 'A3');
INSERT INTO TEACHER VALUES (311, 'Misty', 'Day', '604-777-9999', 'George Mason University', 'Education', 'Bachelor Degree', 'A1');
INSERT INTO TEACHER VALUES (312, 'Clarissa', 'Thompson', '704-356-7789', 'George Mason University', 'Education', 'Bachelor Degree', 'A2');
INSERT INTO TEACHER VALUES (313, 'Priya', 'Patel', '124-244-1353', 'Old Dominion University', 'Education', 'Bachelor Dgree', 'A3');
INSERT INTO TEACHER VALUES (314, 'Andrew', 'Garfield', '703-110-6767', 'George Washington University', 'Education', 'Bachelor Degree', 'A4');
INSERT INTO TEACHER VALUES (315, 'Justin', 'Kwarteng', '804-571-7034', 'George Washington University', 'Education', 'Bachelor Degree', 'A5');
INSERT INTO TEACHER_EMAIL VALUES (101, 'cday@hls.edu', 'mistyday123@gmail.com', 311);
INSERT INTO TEACHER_EMAIL VALUES(102, 'cthompson@hls.edu', 'rissaroo@gmail.com', 312);
INSERT INTO TEACHER_EMAIL VALUES(103, 'ppatel@hls.edu', 'angellight341@gmail.coom', 313);
INSERT INTO TEACHER_EMAIL VALUES(104, 'agarfield@hls.edu', 'garfield30@hotmail.com', 314);
INSERT INTO TEACHER_EMAIL VALUES(105, 'jkwarteng@hls.edu', 'jk34567@yahoo.com', 315);
INSERT INTO PARENT VALUES (411, 'Dina', 'Justice', NULL, 'Mother');
INSERT INTO PARENT VALUES (412, 'Tamzeed', 'Islam', 'tislam@gmail.com', 'Father');
INSERT INTO PARENT VALUES (413, 'Linda', 'Mauve', 'mauvemonday@gmail.com', 'Grandmother');
INSERT INTO PARENT VALUES (414, 'Daniel', 'Caesar', NULL, 'Grandfather');
INSERT INTO PARENT VALUES (415, 'Zoro', 'Roronoa', 'roronoazoro@hotmail.com', 'Father');
INSERT INTO PARENT_PHONE VALUES (201, '703-000-0002', '401-111-9009', '321-322-3234', 411);
INSERT INTO PARENT_PHONE VALUES (202, NULL, '554-666-6666', NULL, 412);
INSERT INTO PARENT_PHONE VALUES (203, NULL, '666-777-8888', '333-010-1000', 413);
INSERT INTO PARENT_PHONE VALUES (204, NULL, '800-900-2000', NULL, 414);
INSERT INTO PARENT_PHONE VALUES (205, '168-731-1010', '110-444-3333', NULL, 415);
INSERT INTO ASSIGNMENT VALUES (411, 211);
INSERT INTO ASSIGNMENT VALUES (411, 212);
INSERT INTO ASSIGNMENT VALUES (413, 215);
INSERT INTO ASSIGNMENT VALUES (414, 215);
INSERT INTO ASSIGNMENT VALUES (415, 213);
INSERT INTO LUNCH_ORDER VALUES (301, 4, 411);
INSERT INTO LUNCH_ORDER VALUES (302, 3, 412);
INSERT INTO LUNCH_ORDER VALUES (303, 2, 413);
INSERT INTO LUNCH_ORDER VALUES (304, 1, 414);
INSERT INTO LUNCH_ORDER VALUES (305, 3, 415);
INSERT INTO LUNCH_ITEM VALUES (401, 'sliced apples', 100);
INSERT INTO LUNCH_ITEM VALUES (402, 'mashed potato', 320);
INSERT INTO LUNCH_ITEM VALUES (403, 'cheese pizza', 22);
INSERT INTO LUNCH_ITEM VALUES (404, 'salad', 115);
INSERT INTO LUNCH_ITEM VALUES (405, 'chicken nuggets', 161);
INSERT INTO SECOND_ASSIGNMENT VALUES (301, 401);
INSERT INTO SECOND_ASSIGNMENT VALUES (301, 402);
INSERT INTO SECOND_ASSIGNMENT VALUES (302, 403);
INSERT INTO SECOND_ASSIGNMENT VALUES (303, 403);
INSERT INTO SECOND_ASSIGNMENT VALUES (305, 405);
SELECT * FROM CLASS;
SELECT * FROM STUDENT;
SELECT * FROM TEACHER;
SELECT * FROM TEACHER_EMAIL;
SELECT * FROM PARENT;
SELECT * FROM PARENT_PHONE;
SELECT * FROM LUNCH_ORDER;
SELECT * FROM LUNCH_ITEM;
SELECT * FROM SECOND_ASSIGNMENT;
# Task 5 - Query the data
SELECT SUM(NUM_ITEMS) FROM LUNCH_ORDER WHERE LUNCH_ORDER_ID=301;
SELECT SUM(NUM_ITEMS) FROM LUNCH_ORDER WHERE LUNCH_ORDER_ID=302;
SELECT SUM(NUM_ITEMS) FROM LUNCH_ORDER WHERE LUNCH_ORDER_ID=303;
SELECT SUM(NUM_ITEMS) FROM LUNCH_ORDER WHERE LUNCH_ORDER_ID=304;
SELECT SUM(NUM_ITEMS) FROM LUNCH_ORDER WHERE LUNCH_ORDER_ID=305;
SELECT SUM(CODE) FROM LUNCH_ITEM WHERE MONTH=3;
SELECT STUDENT_ID, CODE FROM STUDENT INNER JOIN LUNCH_ITEM WHERE CODE=(SELECT MAX(CODE) FROM LUNCH_ITEM) AND STUDENT_ID=211;
SELECT STUDENT_ID, CODE FROM STUDENT INNER JOIN LUNCH_ITEM WHERE CODE=(SELECT MAX(CODE) FROM LUNCH_ITEM) AND STUDENT_ID=212;
SELECT STUDENT_ID, CODE FROM STUDENT, LUNCH_ITEM WHERE CODE=(SELECT MAX(CODE) FROM LUNCH_ITEM) AND STUDENT_ID=213;
SELECT STUDENT_ID, CODE FROM STUDENT, LUNCH_ITEM WHERE CODE=(SELECT MAX(CODE) FROM LUNCH_ITEM) AND STUDENT_ID=214;
SELECT STUDENT_ID, CODE FROM STUDENT, LUNCH_ITEM WHERE CODE=(SELECT MAX(CODE) FROM LUNCH_ITEM) AND STUDENT_ID=215;
SELECT CLASS.CODE, LUNCH_ITEM.CODE, SUM(LUNCH_ITEM.CODE) FROM LUNCH_ITEM INNER JOIN CLASS WHERE CLASS.CODE='A1';